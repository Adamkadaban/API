services:
  postgres:
    image: postgres:17
    container_name: postgres_db_openlabsx
    env_file:
      - .env
    ports:
      - "${POSTGRES_DEBUG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastapi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Initialize database and create admin user
  init_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fastapi_init_dev
    env_file:
      - .env
    volumes:
      - .:/code
    command: ["python", "/code/src/scripts/create_admin.py"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fastapi_network

  fastapi_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fastapi_app_dev
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - "8000:80"
      - "5678:5678"
    depends_on:
      init_dev:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    networks:
      - fastapi_network
    command: [
      "python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "--wait-for-client",
      "-m", "uvicorn", "src.app.main:app", "--host", "0.0.0.0", "--port", "80", "--reload", "--workers", "4"
    ]

volumes:
  postgres_data:

networks:
  fastapi_network:
    driver: bridge
